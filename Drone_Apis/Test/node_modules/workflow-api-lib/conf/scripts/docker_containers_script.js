'use strict';

var debug = require('debug')('workflow-api-lib:docker_containers');

module.exports = function(rule, exec, result, callback) {
	var success = !result.error,
		data = result.data;

	switch (exec.name || exec.api) {
		case 'container_start_status':
			success = !result.error && (data && data.State && data.State.Running);
			debug('Image "%s" is running: %s', rule.props['@imageName'], success);
			break;
		case 'container_stop':
			if (result.statusCode !== 404) {
				return getContainerStatus(rule.props['@containerId'], rule, callback);
			}
			break;
		case 'container_status':
			return callback();
	}

	rule.run(success && exec.success || !success && exec.failed || exec.result, data);
};

function getContainerStatus(id, parentRule, callback) {
	var rule = parentRule.clone();
	rule.init(parentRule.serverConfig, 'container_status', {containerId: id}, function(results) {
		var res = results.container_status || {},
			data = res.result;

		if (res.error || (res.statusCode !== 200 && res.statusCode !== 204)) {
			callback();
		} else if (data && data.State && data.State.Running === false) {
			callback();
		} else {
			setTimeout(function() {
				getContainerStatus(id, parentRule);
			}, 10000);
		}
	});
}